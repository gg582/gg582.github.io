---
layout: post
title: "라즈봇 디바이스 드라이버 작성-모터편" 
date: 2025-05-10 13:35:00 +0900
categories: [blog]
---

---
# 라즈봇 디바이스 드라이버 작성(모터 편)

### 개요
IOCTL로 I2C 슬레이브를 제어하는 디바이스 드라이버를 작성해 봅시다.

### 작성 계획
* **쉬운 모터 제어**: 먼저, 전진, 후진, 좌회전, 우회전을 고정 속도로 만들어 봅시다.
* **정밀한 제어**: 바퀴의 속도와 회전 방향을 I2C 쓰기 동작 버퍼를 직접 지정하여 제어해 봅시다.

우선, IOCTL 캐릭터 디바이스 형태로 일종의 더미 디바이스를 만들어 주는 구조가 관리하기 편합니다.
이 더미 디바이스는 적절한 I/O 요청을 받아, I2C 슬레이브가 이해 가능한 형태로 번역해 줘야 합니다.
가장 먼저, 간단한 알고리즘 구현 혹은 테스트를 위해 기본적인 4가지 동작을 정의해 봅시다.

```bash
editor ioctl_motor_cmd.h # 기본 에디터로 작성할 헤더 파일 생성
```

먼저, 헤더의 중복 포함을 검사하기 위한 매크로를 다음과 같이 2줄 작성합니다.

```c
#ifndef IOCTL_MOTOR_CMD_H
#define IOCTL_MOTOR_CMD_H
```

구문을 하나하나 우리말로 풀어 봅시다.
```text
만약 IO 제어 모터 명령어 헤더가 미리 정의되지 않았다면,
    IO 제어 명령어 헤더를 정의합니다.
```

그렇다면, 헤더를 두 번 포함시키려 해도 이 매크로에서 방지해 주게 됩니다.

그 말은,

---
1. 최초로 헤더 포함 시도
    1.1 만약 헤더가 포함되어 있었는지 확인
    1.2 미포함
    1.3 승인
2. 두 번째로 헤더 포함 시도
    2.1 만약 헤더가 포함되어 있었는지 확인
    2.2 **포함**

    2.3 미승인
---

과 같은 식으로 동작하게 된다는 것을 의미합니다.


이제 정보를 보내기 위한 구조체를 보내 보도록 하겠습니다.
Yahboom 라즈봇의 I2C 칩은 다음과 같은 명령어 양식을 받습니다.

<div style="text-align: center;">
<table style="border-collapse: collapse; width: 100%; border: 1px solid black;">
<thead style=
